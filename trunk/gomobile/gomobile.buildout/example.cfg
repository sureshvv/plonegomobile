#
# This is a buildout file for mmaspecial.com.
# MMA Special is an ecommerce site focused on martial arts accessories.
# This file is made public to share GetPaid knowledge in advanced shop configurations.
#

#
# Much based on dexterity good known version set (good-py):
# http://plone.org/products/dexterity/documentation/manual/developer-manual/pre-requisites/buildout-configuration
#

[buildout]
parts =
    zope2
    productdistros
    instance
    zopepy
    omelette
    PIL

# Change the number here to change the version of Plone being used
extends =
	http://dist.plone.org/release/3.3.1/versions.cfg
    http://good-py.appspot.com/release/dexterity/1.0a1
	gomobile.trunk.cfg

versions = versions

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/3.3.1
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

# Add additional eggs here
eggs =
	PIL
	Products.LinguaPlone<2.5

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =

extensions = mr.developer

[versions]
zc.buildout = 1.3.0
ZODB3 = 3.8.3
Products.ATContentTypes = 1.3.4


#
# mmaspecial specific source checkouts
# We automatically include all definitions from getpaid.trunk.cfg file by extends directive above
#
[sources]


[zope2]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.zope2install
recipe = plone.recipe.zope2install
fake-zope-eggs = true
additional-fake-eggs =
    ZODB3
url = ${versions:zope2-url}

# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL,
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.
[productdistros]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.distros
recipe = plone.recipe.distros
urls =
nested-packages =
version-suffix-packages =

[instance]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.zope2instance
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:x
http-address = 8080
debug-mode = on
verbose-security = on

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = Plone my.package
eggs =
    Plone
    ${buildout:eggs}
    ${gomobile.config:eggs}

#
# Create this folder
# plone.app.headeranimation uses for image uploads
#
blob-storage = blobs

# Various ZCML slugs needed to run the site
zcml =
    plone.app.blob
    ${gomobile.config:zcml}


products =
    ${buildout:directory}/products
    ${productdistros:location}

environment-vars =
     PTS_LANGUAGES en, fi

[zopepy]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/zc.recipe.egg
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
extra-paths = ${zope2:location}/lib/python
scripts = zopepy

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}
products = ${instance:products}
packages = ${zope2:location}/lib/python ./

[PIL]
# Build egg with Chris McDonough's custom packaging of setuptools-compatibile PIL
# http://article.gmane.org/gmane.comp.web.zope.devel/13999
recipe = zc.recipe.egg
egg = PIL==1.1.6
find-links = http://dist.repoze.org/PIL-1.1.6.tar.gz

