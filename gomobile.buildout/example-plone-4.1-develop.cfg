# buildout.cfg file for Plone 4 + web and mobile development work
#
# Usage: 
# 
# copy this file to your buildout folder and replace buildout.cfg
#
# python boostrap.py
# bin/develop co ""
# bin/buildout
#
#
# Activate development mode
# 
# bin/develop activate mfabrik.webandmobile 
# bin/develop activate gomobile.convergence
#
# Check that bin/instance script reflects develop eggs in src/ folder
# 
# 
# 
[buildout]
parts =  
    instance
    zopepy
    i18ndude
    zopeskel
    test
    omelette

extends = 
    http://dist.plone.org/release/4.1.5/versions.cfg
    http://good-py.appspot.com/release/dexterity/1.2?plone=4.1.5
    http://plonegomobile.googlecode.com/svn/gomobile.buildout/gomobile.plone-4.trunk.commit-access.cfg

eggs-directory=../buildout-cache/eggs
download-cache=../buildout-cache/downloads

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.1.5
    http://dist.plone.org/thirdparty

extensions = 
    mr.developer
    buildout.dumppickedversions

sources = sources

versions = versions

# Reference any folders where you have Python egg source code under development here 
# e.g.: develop = src/my.package
# If you are using the mr.developer extension and have the source code in a 
# repository mr.developer will handle this automatically for you
develop =

# Create bin/instance command to manage Zope start up and shutdown
[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
debug-mode = off
verbose-security = on
blob-storage = var/blobstorage

# Eggs must be explicitly listed or
# buildout cannot "develop" them properly,
#  
eggs =
    PIL
    Plone
    ${gomobile.config:eggs}


# Some pre-Plone 3.3 packages may need you to register the package name here in 
# order their configure.zcml to be run (http://plone.org/products/plone/roadmap/247)
# - this is never required for packages in the Products namespace (Products.*)
zcml =


# zopepy commands allows you to execute Python scripts using a PYTHONPATH 
# including all the configured eggs
[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

# create bin/i18ndude command
[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
    ${instance:eggs}

# create ZopeSkel and paster commands with dexterity support
[zopeskel]
recipe = zc.recipe.egg
eggs =
    ZopeSkel
    PasteScript
    zopeskel.dexterity

# symlinks all Python source code to parts/omelette folder when buildout is run
# windows users will need to install additional software for this part to build 
# correctly.  See http://pypi.python.org/pypi/collective.recipe.omelette for
# relevant details.
[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

# Version pindowns for new style products go here - this section extends one 
# provided in http://dist.plone.org/release/
[versions]
